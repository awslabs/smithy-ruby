# frozen_string_literal: true

# This is generated code!

module <%= namespace %>
  module Shapes
    include Smithy::Client::Shapes

<%# Shapes definition -%>
  <%- @shapes.each do |shape| -%>
    <%- params = ["id: \"#{shape.id}\""] -%>
    <%- params << "type: Types::#{shape.name}" if shape.typed -%>
    <%- params << "traits: #{shape.traits}" unless shape.traits.empty? -%>
    <%= "#{shape.name} = #{shape.shape_type}.new(" %><%= params.join(', ') %>)
  <%- end -%>
<%# Shapes members definition %>
  <%- shapes_with_members.each do |shape| -%>
    <%- shape.members.each do |member| -%>
    <%- params = ["\"#{member.name}\"", member.shape] -%>
    <%- params << "traits: #{member.traits}" unless member.traits.empty? -%>
    <%= "#{shape.name}.add_member(" %><%= params.join(', ') %>)
    <%- end -%>
  <%- end -%>
<%# Schema definition %>
    SCHEMA = Smithy::Client::Schema.new do |schema|
      schema.service = ServiceShape.new(
        shape_id: "<%= @service_shape.id %>",
        version: "<%= @service_shape.version %>",
        traits: <%= @service_shape.traits %>
      )
    <%- @operation_shapes.each do |shape| %>
      schema.add_operation(:<%= shape.name %>, OperationShape.new do |operation|
        operation.id = "<%= shape.id %>"
        operation.input = <%= shape.input %>
        operation.output = <%= shape.output %>
       <%- unless shape.traits.empty? -%>
        operation.traits = <%= shape.traits -%>
       <% end -%>
       <%- unless shape.errors.empty? -%>
       <% shape.errors.each do |err| %>
        operation.errors << <%= err -%>
       <% end -%>
      <% end %>
      end)
    <% end %>
    end
  end
end
