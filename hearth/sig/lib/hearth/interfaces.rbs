# Hack - https://github.com/ruby/delegate/issues/8
class SimpleDelegator
end

# Hack - https://github.com/ruby/rbs/issues/1481
class URI
end

# Hack - https://github.com/ruby/rbs/issues/1482
class Logger
end

interface _Plugin
  def call: (Hearth::Configuration) -> void
end

interface _Interceptor
  def read_before_execution: (Hearth::InterceptorContext) -> void

  def modify_before_serialization: (Hearth::InterceptorContext) -> void

  def read_before_serialization: (Hearth::InterceptorContext) -> void

  def read_after_serialization: (Hearth::InterceptorContext) -> void

  def modify_before_retry_loop: (Hearth::InterceptorContext) -> void

  def read_before_attempt: (Hearth::InterceptorContext) -> void

  def modify_before_signing: (Hearth::InterceptorContext) -> void

  def read_before_signing: (Hearth::InterceptorContext) -> void

  def read_after_signing: (Hearth::InterceptorContext) -> void

  def modify_before_transmit: (Hearth::InterceptorContext) -> void

  def read_before_transmit: (Hearth::InterceptorContext) -> void

  def read_after_transmit: (Hearth::InterceptorContext) -> void

  def modify_before_deserialization: (Hearth::InterceptorContext) -> void

  def read_before_deserialization: (Hearth::InterceptorContext) -> void

  def read_after_deserialization: (Hearth::InterceptorContext) -> void

  def modify_before_attempt_completion: (Hearth::InterceptorContext) -> void

  def read_after_attempt: (Hearth::InterceptorContext) -> void

  def modify_before_completion: (Hearth::InterceptorContext) -> void

  def read_after_execution: (Hearth::InterceptorContext) -> void
end

interface _ErrorInspector
  def initialize: (Hearth::ApiError, Hearth::Response) -> void

  def retryable?: () -> bool

  def error_type: () -> String

  def hints: () -> Hash[Symbol, untyped]
end

interface _WritableIO
  def write: (*_ToS) -> Integer
end