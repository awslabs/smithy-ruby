module Hearth
  class InterceptorList
    include Enumerable[Interceptor]

    def initialize: (?Array[Interceptor] interceptors) -> void

    def append: (Interceptor interceptor) -> void
    alias << append

    def concat: (Enumerable[Interceptor] other) -> self

    def dup: () -> InterceptorList

    def each: () { (Interceptor) -> untyped } -> untyped
  end
end
