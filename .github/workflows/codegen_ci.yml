name: Smithy Ruby Codegen CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  java_version: 17
  ruby_version: 3.2

jobs:

  ruby-rbs-type-check:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby_version }}

      - uses: actions/checkout@v2

      - name: Install gems
        run: bundle install

      - name: Build the SDK
        run: bundle exec rake codegen:build

      - name: steep check
        run: bundle exec steep:white_label

      - name: rbs:test
        run: bundle exec rake rbs:whilte_label

  ruby-specs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ['3.0', 3.1, 3.2, 3.3]

    steps:
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}

      - uses: actions/checkout@v2

      - name: Install gems
        run: bundle install

      - name: Build SDK
        run: bundle exec rake codegen:build

      - name: Copy Gemfile
        run: cp hearth/Gemfile white_label/

      - name: WhiteLabel Integration tests
        run: bundle exec test:white_label

      - name: Smithy Core Endpoint Specs
        run: bundle exec test:'smithy-core-endpoint-tests

  codegen-rubocop:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Ruby 3.3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3

      - uses: actions/checkout@v2

      - name: Copy Gemfile and its dependencies
        run: cp hearth/Gemfile hearth/hearth.gemspec hearth/VERSION codegen/

      - name: Install gems
        run: bundle install
        working-directory: ./codegen

      - name: Run rubocop
        run: bundle exec rubocop -E -S
        working-directory: ./codegen
