# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file was code generated using smithy-ruby.
# https://github.com/awslabs/smithy-ruby
#
# WARNING ABOUT GENERATED CODE

module Weather
  module Types

    class Announcements < Hearth::Union
      class Police < Announcements
        def to_h: () -> { police: Hash[Symbol, Announcements] }
        def to_s: () -> String
      end

      class Fire < Announcements
        def to_h: () -> { fire: Hash[Symbol, Announcements] }
        def to_s: () -> String
      end

      class Health < Announcements
        def to_h: () -> { health: Hash[Symbol, Announcements] }
        def to_s: () -> String
      end

      class Unknown < Announcements
        def to_h: () -> { unknown: Hash[Symbol, Announcements] }
        def to_s: () -> String
      end
    end

    Baz: Struct[Hearth::Structure]

    CityCoordinates: Struct[Hearth::Structure]

    CitySummary: Struct[Hearth::Structure]

    Foo: Struct[Hearth::Structure]

    GetCityAnnouncementsInput: Struct[Hearth::Structure]

    GetCityAnnouncementsOutput: Struct[Hearth::Structure]

    GetCityImageInput: Struct[Hearth::Structure]

    GetCityImageOutput: Struct[Hearth::Structure]

    GetCityInput: Struct[Hearth::Structure]

    GetCityOutput: Struct[Hearth::Structure]

    GetCurrentTimeInput: Struct[Hearth::Structure]

    GetCurrentTimeOutput: Struct[Hearth::Structure]

    GetForecastInput: Struct[Hearth::Structure]

    GetForecastOutput: Struct[Hearth::Structure]

    class ImageType < Hearth::Union
      class Raw < ImageType
        def to_h: () -> { raw: Hash[Symbol, ImageType] }
        def to_s: () -> String
      end

      class Png < ImageType
        def to_h: () -> { png: Hash[Symbol, ImageType] }
        def to_s: () -> String
      end

      class Unknown < ImageType
        def to_h: () -> { unknown: Hash[Symbol, ImageType] }
        def to_s: () -> String
      end
    end

    ListCitiesInput: Struct[Hearth::Structure]

    ListCitiesOutput: Struct[Hearth::Structure]

    Message: Struct[Hearth::Structure]

    NoSuchResource: Struct[Hearth::Structure]

    OtherStructure: Struct[Hearth::Structure]

    PNGImage: Struct[Hearth::Structure]

    class Precipitation < Hearth::Union
      class Rain < Precipitation
        def to_h: () -> { rain: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Sleet < Precipitation
        def to_h: () -> { sleet: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Hail < Precipitation
        def to_h: () -> { hail: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Snow < Precipitation
        def to_h: () -> { snow: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Mixed < Precipitation
        def to_h: () -> { mixed: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Other < Precipitation
        def to_h: () -> { other: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Blob < Precipitation
        def to_h: () -> { blob: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Foo < Precipitation
        def to_h: () -> { foo: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Baz < Precipitation
        def to_h: () -> { baz: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end

      class Unknown < Precipitation
        def to_h: () -> { unknown: Hash[Symbol, Precipitation] }
        def to_s: () -> String
      end
    end

    module TypedYesNo
      YES: ::String

      NO: ::String
    end

    Struct____456efg: Struct[Hearth::Structure]

    Struct____789BadNameInput: Struct[Hearth::Structure]

    Struct____789BadNameOutput: Struct[Hearth::Structure]

  end
end
