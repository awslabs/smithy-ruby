# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file was code generated using smithy-ruby.
# https://github.com/smithy-lang/smithy-ruby
#
# WARNING ABOUT GENERATED CODE

module RailsJson
  module Types

    class AllQueryStringTypesInput
      include Hearth::Structure
      attr_accessor query_string (): ::String?
      attr_accessor query_string_list (): ::Array[::String]?
      attr_accessor query_string_set (): ::Array[::String]?
      attr_accessor query_byte (): ::Integer?
      attr_accessor query_short (): ::Integer?
      attr_accessor query_integer (): ::Integer?
      attr_accessor query_integer_list (): ::Array[::Integer]?
      attr_accessor query_integer_set (): ::Array[::Integer]?
      attr_accessor query_long (): ::Integer?
      attr_accessor query_float (): ::Float?
      attr_accessor query_double (): ::Float?
      attr_accessor query_double_list (): ::Array[::Float]?
      attr_accessor query_boolean (): bool?
      attr_accessor query_boolean_list (): ::Array[bool]?
      attr_accessor query_timestamp (): ::Time?
      attr_accessor query_timestamp_list (): ::Array[::Time]?
      attr_accessor query_enum (): ::String?
      attr_accessor query_enum_list (): ::Array[::String]?
      attr_accessor query_integer_enum (): ::Integer?
      attr_accessor query_integer_enum_list (): ::Array[::Integer]?
      attr_accessor query_params_map_of_string_list (): ::Hash[::String, ::Array[::String]]?
    end

    class AllQueryStringTypesOutput
      include Hearth::Structure
    end

    class ClientOptionalDefaults
      include Hearth::Structure
      attr_accessor member (): ::Integer?
    end

    class ComplexError
      include Hearth::Structure
      attr_accessor header (): ::String?
      attr_accessor top_level (): ::String?
      attr_accessor nested (): Types::ComplexNestedErrorData?
    end

    class ComplexNestedErrorData
      include Hearth::Structure
      attr_accessor foo (): ::String?
    end

    class ConstantAndVariableQueryStringInput
      include Hearth::Structure
      attr_accessor baz (): ::String?
      attr_accessor maybe_set (): ::String?
    end

    class ConstantAndVariableQueryStringOutput
      include Hearth::Structure
    end

    class ConstantQueryStringInput
      include Hearth::Structure
      attr_accessor hello (): ::String?
    end

    class ConstantQueryStringOutput
      include Hearth::Structure
    end

    class DatetimeOffsetsInput
      include Hearth::Structure
    end

    class DatetimeOffsetsOutput
      include Hearth::Structure
      attr_accessor datetime (): ::Time?
    end

    class Defaults
      include Hearth::Structure
      attr_accessor default_string (): ::String?
      attr_accessor default_boolean (): bool?
      attr_accessor default_list (): ::Array[::String]?
      attr_accessor default_document_map (): Hearth::document?
      attr_accessor default_document_string (): Hearth::document?
      attr_accessor default_document_boolean (): Hearth::document?
      attr_accessor default_document_list (): Hearth::document?
      attr_accessor default_null_document (): Hearth::document?
      attr_accessor default_timestamp (): ::Time?
      attr_accessor default_blob (): ::String?
      attr_accessor default_byte (): ::Integer?
      attr_accessor default_short (): ::Integer?
      attr_accessor default_integer (): ::Integer?
      attr_accessor default_long (): ::Integer?
      attr_accessor default_float (): ::Float?
      attr_accessor default_double (): ::Float?
      attr_accessor default_map (): ::Hash[::String, ::String]?
      attr_accessor default_enum (): ::String?
      attr_accessor default_int_enum (): ::Integer?
      attr_accessor empty_string (): ::String?
      attr_accessor false_boolean (): bool?
      attr_accessor empty_blob (): ::String?
      attr_accessor zero_byte (): ::Integer?
      attr_accessor zero_short (): ::Integer?
      attr_accessor zero_integer (): ::Integer?
      attr_accessor zero_long (): ::Integer?
      attr_accessor zero_float (): ::Float?
      attr_accessor zero_double (): ::Float?
    end

    class Dialog
      include Hearth::Structure
      attr_accessor language (): ::String?
      attr_accessor greeting (): ::String?
      attr_accessor farewell (): Types::Farewell?
    end

    class DocumentTypeAsMapValueInput
      include Hearth::Structure
      attr_accessor doc_valued_map (): ::Hash[::String, Hearth::document]?
    end

    class DocumentTypeAsMapValueOutput
      include Hearth::Structure
      attr_accessor doc_valued_map (): ::Hash[::String, Hearth::document]?
    end

    class DocumentTypeAsPayloadInput
      include Hearth::Structure
      attr_accessor document_value (): Hearth::document?
    end

    class DocumentTypeAsPayloadOutput
      include Hearth::Structure
      attr_accessor document_value (): Hearth::document?
    end

    class DocumentTypeInput
      include Hearth::Structure
      attr_accessor string_value (): ::String?
      attr_accessor document_value (): Hearth::document?
    end

    class DocumentTypeOutput
      include Hearth::Structure
      attr_accessor string_value (): ::String?
      attr_accessor document_value (): Hearth::document?
    end

    class EmptyInputAndEmptyOutputInput
      include Hearth::Structure
    end

    class EmptyInputAndEmptyOutputOutput
      include Hearth::Structure
    end

    class EndpointOperationInput
      include Hearth::Structure
    end

    class EndpointOperationOutput
      include Hearth::Structure
    end

    class EndpointWithHostLabelOperationInput
      include Hearth::Structure
      attr_accessor label (): ::String?
    end

    class EndpointWithHostLabelOperationOutput
      include Hearth::Structure
    end

    class Farewell
      include Hearth::Structure
      attr_accessor phrase (): ::String?
    end

    module FooEnum
      FOO: ::String

      BAZ: ::String

      BAR: ::String

      ONE: ::String

      ZERO: ::String
    end

    class FractionalSecondsInput
      include Hearth::Structure
    end

    class FractionalSecondsOutput
      include Hearth::Structure
      attr_accessor datetime (): ::Time?
    end

    class GreetingStruct
      include Hearth::Structure
      attr_accessor hi (): ::String?
    end

    class GreetingWithErrorsInput
      include Hearth::Structure
    end

    class GreetingWithErrorsOutput
      include Hearth::Structure
      attr_accessor greeting (): ::String?
    end

    class HostWithPathOperationInput
      include Hearth::Structure
    end

    class HostWithPathOperationOutput
      include Hearth::Structure
    end

    class HttpChecksumRequiredInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
    end

    class HttpChecksumRequiredOutput
      include Hearth::Structure
      attr_accessor foo (): ::String?
    end

    class HttpEnumPayloadInput
      include Hearth::Structure
      attr_accessor payload (): ::String?
    end

    class HttpEnumPayloadOutput
      include Hearth::Structure
      attr_accessor payload (): ::String?
    end

    class HttpPayloadTraitsInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): ::String?
    end

    class HttpPayloadTraitsOutput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): ::String?
    end

    class HttpPayloadTraitsWithMediaTypeInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): ::String?
    end

    class HttpPayloadTraitsWithMediaTypeOutput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): ::String?
    end

    class HttpPayloadWithStructureInput
      include Hearth::Structure
      attr_accessor nested (): Types::NestedPayload?
    end

    class HttpPayloadWithStructureOutput
      include Hearth::Structure
      attr_accessor nested (): Types::NestedPayload?
    end

    class HttpPayloadWithUnionInput
      include Hearth::Structure
      attr_accessor nested (): Types::UnionPayload?
    end

    class HttpPayloadWithUnionOutput
      include Hearth::Structure
      attr_accessor nested (): Types::UnionPayload?
    end

    class HttpPrefixHeadersInResponseInput
      include Hearth::Structure
    end

    class HttpPrefixHeadersInResponseOutput
      include Hearth::Structure
      attr_accessor prefix_headers (): ::Hash[::String, ::String]?
    end

    class HttpPrefixHeadersInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor foo_map (): ::Hash[::String, ::String]?
    end

    class HttpPrefixHeadersOutput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor foo_map (): ::Hash[::String, ::String]?
    end

    class HttpRequestWithFloatLabelsInput
      include Hearth::Structure
      attr_accessor float (): ::Float?
      attr_accessor double (): ::Float?
    end

    class HttpRequestWithFloatLabelsOutput
      include Hearth::Structure
    end

    class HttpRequestWithGreedyLabelInPathInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor baz (): ::String?
    end

    class HttpRequestWithGreedyLabelInPathOutput
      include Hearth::Structure
    end

    class HttpRequestWithLabelsAndTimestampFormatInput
      include Hearth::Structure
      attr_accessor member_epoch_seconds (): ::Time?
      attr_accessor member_http_date (): ::Time?
      attr_accessor member_date_time (): ::Time?
      attr_accessor default_format (): ::Time?
      attr_accessor target_epoch_seconds (): ::Time?
      attr_accessor target_http_date (): ::Time?
      attr_accessor target_date_time (): ::Time?
    end

    class HttpRequestWithLabelsAndTimestampFormatOutput
      include Hearth::Structure
    end

    class HttpRequestWithLabelsInput
      include Hearth::Structure
      attr_accessor string (): ::String?
      attr_accessor short (): ::Integer?
      attr_accessor integer (): ::Integer?
      attr_accessor long (): ::Integer?
      attr_accessor float (): ::Float?
      attr_accessor double (): ::Float?
      attr_accessor boolean (): bool?
      attr_accessor timestamp (): ::Time?
    end

    class HttpRequestWithLabelsOutput
      include Hearth::Structure
    end

    class HttpRequestWithRegexLiteralInput
      include Hearth::Structure
      attr_accessor str (): ::String?
    end

    class HttpRequestWithRegexLiteralOutput
      include Hearth::Structure
    end

    class HttpResponseCodeInput
      include Hearth::Structure
    end

    class HttpResponseCodeOutput
      include Hearth::Structure
      attr_accessor status (): ::Integer?
    end

    class HttpStringPayloadInput
      include Hearth::Structure
      attr_accessor payload (): ::String?
    end

    class HttpStringPayloadOutput
      include Hearth::Structure
      attr_accessor payload (): ::String?
    end

    class IgnoreQueryParamsInResponseInput
      include Hearth::Structure
    end

    class IgnoreQueryParamsInResponseOutput
      include Hearth::Structure
      attr_accessor baz (): ::String?
    end

    class InputAndOutputWithHeadersInput
      include Hearth::Structure
      attr_accessor header_string (): ::String?
      attr_accessor header_byte (): ::Integer?
      attr_accessor header_short (): ::Integer?
      attr_accessor header_integer (): ::Integer?
      attr_accessor header_long (): ::Integer?
      attr_accessor header_float (): ::Float?
      attr_accessor header_double (): ::Float?
      attr_accessor header_true_bool (): bool?
      attr_accessor header_false_bool (): bool?
      attr_accessor header_string_list (): ::Array[::String]?
      attr_accessor header_string_set (): ::Array[::String]?
      attr_accessor header_integer_list (): ::Array[::Integer]?
      attr_accessor header_boolean_list (): ::Array[bool]?
      attr_accessor header_timestamp_list (): ::Array[::Time]?
      attr_accessor header_enum (): ::String?
      attr_accessor header_enum_list (): ::Array[::String]?
      attr_accessor header_integer_enum (): ::Integer?
      attr_accessor header_integer_enum_list (): ::Array[::Integer]?
    end

    class InputAndOutputWithHeadersOutput
      include Hearth::Structure
      attr_accessor header_string (): ::String?
      attr_accessor header_byte (): ::Integer?
      attr_accessor header_short (): ::Integer?
      attr_accessor header_integer (): ::Integer?
      attr_accessor header_long (): ::Integer?
      attr_accessor header_float (): ::Float?
      attr_accessor header_double (): ::Float?
      attr_accessor header_true_bool (): bool?
      attr_accessor header_false_bool (): bool?
      attr_accessor header_string_list (): ::Array[::String]?
      attr_accessor header_string_set (): ::Array[::String]?
      attr_accessor header_integer_list (): ::Array[::Integer]?
      attr_accessor header_boolean_list (): ::Array[bool]?
      attr_accessor header_timestamp_list (): ::Array[::Time]?
      attr_accessor header_enum (): ::String?
      attr_accessor header_enum_list (): ::Array[::String]?
      attr_accessor header_integer_enum (): ::Integer?
      attr_accessor header_integer_enum_list (): ::Array[::Integer]?
    end

    module IntegerEnum
      A: ::Numeric

      B: ::Numeric

      C: ::Numeric
    end

    class InvalidGreeting
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class JsonBlobsInput
      include Hearth::Structure
      attr_accessor data (): ::String?
    end

    class JsonBlobsOutput
      include Hearth::Structure
      attr_accessor data (): ::String?
    end

    class JsonEnumsInput
      include Hearth::Structure
      attr_accessor foo_enum1 (): ::String?
      attr_accessor foo_enum2 (): ::String?
      attr_accessor foo_enum3 (): ::String?
      attr_accessor foo_enum_list (): ::Array[::String]?
      attr_accessor foo_enum_set (): ::Array[::String]?
      attr_accessor foo_enum_map (): ::Hash[::String, ::String]?
    end

    class JsonEnumsOutput
      include Hearth::Structure
      attr_accessor foo_enum1 (): ::String?
      attr_accessor foo_enum2 (): ::String?
      attr_accessor foo_enum3 (): ::String?
      attr_accessor foo_enum_list (): ::Array[::String]?
      attr_accessor foo_enum_set (): ::Array[::String]?
      attr_accessor foo_enum_map (): ::Hash[::String, ::String]?
    end

    class JsonIntEnumsInput
      include Hearth::Structure
      attr_accessor integer_enum1 (): ::Integer?
      attr_accessor integer_enum2 (): ::Integer?
      attr_accessor integer_enum3 (): ::Integer?
      attr_accessor integer_enum_list (): ::Array[::Integer]?
      attr_accessor integer_enum_set (): ::Array[::Integer]?
      attr_accessor integer_enum_map (): ::Hash[::String, ::Integer]?
    end

    class JsonIntEnumsOutput
      include Hearth::Structure
      attr_accessor integer_enum1 (): ::Integer?
      attr_accessor integer_enum2 (): ::Integer?
      attr_accessor integer_enum3 (): ::Integer?
      attr_accessor integer_enum_list (): ::Array[::Integer]?
      attr_accessor integer_enum_set (): ::Array[::Integer]?
      attr_accessor integer_enum_map (): ::Hash[::String, ::Integer]?
    end

    class JsonListsInput
      include Hearth::Structure
      attr_accessor string_list (): ::Array[::String]?
      attr_accessor string_set (): ::Array[::String]?
      attr_accessor integer_list (): ::Array[::Integer]?
      attr_accessor boolean_list (): ::Array[bool]?
      attr_accessor timestamp_list (): ::Array[::Time]?
      attr_accessor enum_list (): ::Array[::String]?
      attr_accessor int_enum_list (): ::Array[::Integer]?
      attr_accessor nested_string_list (): ::Array[::Array[::String]]?
      attr_accessor structure_list (): ::Array[Types::StructureListMember]?
    end

    class JsonListsOutput
      include Hearth::Structure
      attr_accessor string_list (): ::Array[::String]?
      attr_accessor string_set (): ::Array[::String]?
      attr_accessor integer_list (): ::Array[::Integer]?
      attr_accessor boolean_list (): ::Array[bool]?
      attr_accessor timestamp_list (): ::Array[::Time]?
      attr_accessor enum_list (): ::Array[::String]?
      attr_accessor int_enum_list (): ::Array[::Integer]?
      attr_accessor nested_string_list (): ::Array[::Array[::String]]?
      attr_accessor structure_list (): ::Array[Types::StructureListMember]?
    end

    class JsonMapsInput
      include Hearth::Structure
      attr_accessor dense_struct_map (): ::Hash[::String, Types::GreetingStruct]?
      attr_accessor dense_number_map (): ::Hash[::String, ::Integer]?
      attr_accessor dense_boolean_map (): ::Hash[::String, bool]?
      attr_accessor dense_string_map (): ::Hash[::String, ::String]?
      attr_accessor dense_set_map (): ::Hash[::String, ::Array[::String]]?
    end

    class JsonMapsOutput
      include Hearth::Structure
      attr_accessor dense_struct_map (): ::Hash[::String, Types::GreetingStruct]?
      attr_accessor dense_number_map (): ::Hash[::String, ::Integer]?
      attr_accessor dense_boolean_map (): ::Hash[::String, bool]?
      attr_accessor dense_string_map (): ::Hash[::String, ::String]?
      attr_accessor dense_set_map (): ::Hash[::String, ::Array[::String]]?
    end

    class JsonTimestampsInput
      include Hearth::Structure
      attr_accessor normal (): ::Time?
      attr_accessor date_time (): ::Time?
      attr_accessor date_time_on_target (): ::Time?
      attr_accessor epoch_seconds (): ::Time?
      attr_accessor epoch_seconds_on_target (): ::Time?
      attr_accessor http_date (): ::Time?
      attr_accessor http_date_on_target (): ::Time?
    end

    class JsonTimestampsOutput
      include Hearth::Structure
      attr_accessor normal (): ::Time?
      attr_accessor date_time (): ::Time?
      attr_accessor date_time_on_target (): ::Time?
      attr_accessor epoch_seconds (): ::Time?
      attr_accessor epoch_seconds_on_target (): ::Time?
      attr_accessor http_date (): ::Time?
      attr_accessor http_date_on_target (): ::Time?
    end

    class JsonUnionsInput
      include Hearth::Structure
      attr_accessor contents (): Types::MyUnion?
    end

    class JsonUnionsOutput
      include Hearth::Structure
      attr_accessor contents (): Types::MyUnion?
    end

    class MediaTypeHeaderInput
      include Hearth::Structure
      attr_accessor json (): ::String?
    end

    class MediaTypeHeaderOutput
      include Hearth::Structure
      attr_accessor json (): ::String?
    end

    class MyUnion < Hearth::Union
      class StringValue < MyUnion
        def to_h: () -> { string_value: ::String }
        def to_s: () -> String
      end

      class BooleanValue < MyUnion
        def to_h: () -> { boolean_value: bool }
        def to_s: () -> String
      end

      class NumberValue < MyUnion
        def to_h: () -> { number_value: ::Integer }
        def to_s: () -> String
      end

      class BlobValue < MyUnion
        def to_h: () -> { blob_value: ::String }
        def to_s: () -> String
      end

      class TimestampValue < MyUnion
        def to_h: () -> { timestamp_value: ::Time }
        def to_s: () -> String
      end

      class EnumValue < MyUnion
        def to_h: () -> { enum_value: ::String }
        def to_s: () -> String
      end

      class ListValue < MyUnion
        def to_h: () -> { list_value: ::Array[::String] }
        def to_s: () -> String
      end

      class MapValue < MyUnion
        def to_h: () -> { map_value: ::Hash[::String, ::String] }
        def to_s: () -> String
      end

      class StructureValue < MyUnion
        def to_h: () -> { structure_value: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class RenamedStructureValue < MyUnion
        def to_h: () -> { renamed_structure_value: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class Unknown < MyUnion
        def to_h: () -> { unknown: { name: ::String, value: untyped } }
        def to_s: () -> String
      end
    end

    class NestedPayload
      include Hearth::Structure
      attr_accessor greeting (): ::String?
      attr_accessor name (): ::String?
    end

    class NoInputAndNoOutputInput
      include Hearth::Structure
    end

    class NoInputAndNoOutputOutput
      include Hearth::Structure
    end

    class NoInputAndOutputInput
      include Hearth::Structure
    end

    class NoInputAndOutputOutput
      include Hearth::Structure
    end

    class NullAndEmptyHeadersClientInput
      include Hearth::Structure
      attr_accessor a (): ::String?
      attr_accessor b (): ::String?
      attr_accessor c (): ::Array[::String]?
    end

    class NullAndEmptyHeadersClientOutput
      include Hearth::Structure
      attr_accessor a (): ::String?
      attr_accessor b (): ::String?
      attr_accessor c (): ::Array[::String]?
    end

    class NullAndEmptyHeadersServerInput
      include Hearth::Structure
      attr_accessor a (): ::String?
      attr_accessor b (): ::String?
      attr_accessor c (): ::Array[::String]?
    end

    class NullAndEmptyHeadersServerOutput
      include Hearth::Structure
      attr_accessor a (): ::String?
      attr_accessor b (): ::String?
      attr_accessor c (): ::Array[::String]?
    end

    class OmitsNullSerializesEmptyStringInput
      include Hearth::Structure
      attr_accessor null_value (): ::String?
      attr_accessor empty_string (): ::String?
    end

    class OmitsNullSerializesEmptyStringOutput
      include Hearth::Structure
    end

    class OmitsSerializingEmptyListsInput
      include Hearth::Structure
      attr_accessor query_string_list (): ::Array[::String]?
      attr_accessor query_integer_list (): ::Array[::Integer]?
      attr_accessor query_double_list (): ::Array[::Float]?
      attr_accessor query_boolean_list (): ::Array[bool]?
      attr_accessor query_timestamp_list (): ::Array[::Time]?
      attr_accessor query_enum_list (): ::Array[::String]?
      attr_accessor query_integer_enum_list (): ::Array[::Integer]?
    end

    class OmitsSerializingEmptyListsOutput
      include Hearth::Structure
    end

    class OperationWithDefaultsInput
      include Hearth::Structure
      attr_accessor defaults (): Types::Defaults?
      attr_accessor client_optional_defaults (): Types::ClientOptionalDefaults?
      attr_accessor top_level_default (): ::String?
      attr_accessor other_top_level_default (): ::Integer?
    end

    class OperationWithDefaultsOutput
      include Hearth::Structure
      attr_accessor default_string (): ::String?
      attr_accessor default_boolean (): bool?
      attr_accessor default_list (): ::Array[::String]?
      attr_accessor default_document_map (): Hearth::document?
      attr_accessor default_document_string (): Hearth::document?
      attr_accessor default_document_boolean (): Hearth::document?
      attr_accessor default_document_list (): Hearth::document?
      attr_accessor default_null_document (): Hearth::document?
      attr_accessor default_timestamp (): ::Time?
      attr_accessor default_blob (): ::String?
      attr_accessor default_byte (): ::Integer?
      attr_accessor default_short (): ::Integer?
      attr_accessor default_integer (): ::Integer?
      attr_accessor default_long (): ::Integer?
      attr_accessor default_float (): ::Float?
      attr_accessor default_double (): ::Float?
      attr_accessor default_map (): ::Hash[::String, ::String]?
      attr_accessor default_enum (): ::String?
      attr_accessor default_int_enum (): ::Integer?
      attr_accessor empty_string (): ::String?
      attr_accessor false_boolean (): bool?
      attr_accessor empty_blob (): ::String?
      attr_accessor zero_byte (): ::Integer?
      attr_accessor zero_short (): ::Integer?
      attr_accessor zero_integer (): ::Integer?
      attr_accessor zero_long (): ::Integer?
      attr_accessor zero_float (): ::Float?
      attr_accessor zero_double (): ::Float?
    end

    class OperationWithNestedStructureInput
      include Hearth::Structure
      attr_accessor top_level (): Types::TopLevel?
    end

    class OperationWithNestedStructureOutput
      include Hearth::Structure
      attr_accessor dialog (): Types::Dialog?
      attr_accessor dialog_list (): ::Array[Types::Dialog]?
      attr_accessor dialog_map (): ::Hash[::String, Types::Dialog]?
    end

    class PayloadConfig
      include Hearth::Structure
      attr_accessor data (): ::Integer?
    end

    class PlayerAction < Hearth::Union
      class Quit < PlayerAction
        def to_h: () -> { quit: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class Unknown < PlayerAction
        def to_h: () -> { unknown: { name: ::String, value: untyped } }
        def to_s: () -> String
      end
    end

    class PostPlayerActionInput
      include Hearth::Structure
      attr_accessor action (): Types::PlayerAction?
    end

    class PostPlayerActionOutput
      include Hearth::Structure
      attr_accessor action (): Types::PlayerAction?
    end

    class PostUnionWithJsonNameInput
      include Hearth::Structure
      attr_accessor value (): Types::UnionWithJsonName?
    end

    class PostUnionWithJsonNameOutput
      include Hearth::Structure
      attr_accessor value (): Types::UnionWithJsonName?
    end

    class PutWithContentEncodingInput
      include Hearth::Structure
      attr_accessor encoding (): ::String?
      attr_accessor data (): ::String?
    end

    class PutWithContentEncodingOutput
      include Hearth::Structure
    end

    class QueryIdempotencyTokenAutoFillInput
      include Hearth::Structure
      attr_accessor token (): ::String?
    end

    class QueryIdempotencyTokenAutoFillOutput
      include Hearth::Structure
    end

    class QueryParamsAsStringListMapInput
      include Hearth::Structure
      attr_accessor qux (): ::String?
      attr_accessor foo (): ::Hash[::String, ::Array[::String]]?
    end

    class QueryParamsAsStringListMapOutput
      include Hearth::Structure
    end

    class QueryPrecedenceInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor baz (): ::Hash[::String, ::String]?
    end

    class QueryPrecedenceOutput
      include Hearth::Structure
    end

    class RecursiveShapesInput
      include Hearth::Structure
      attr_accessor nested (): Types::RecursiveShapesInputOutputNested1?
    end

    class RecursiveShapesInputOutputNested1
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor nested (): Types::RecursiveShapesInputOutputNested2?
    end

    class RecursiveShapesInputOutputNested2
      include Hearth::Structure
      attr_accessor bar (): ::String?
      attr_accessor recursive_member (): Types::RecursiveShapesInputOutputNested1?
    end

    class RecursiveShapesOutput
      include Hearth::Structure
      attr_accessor nested (): Types::RecursiveShapesInputOutputNested1?
    end

    class RenamedGreeting
      include Hearth::Structure
      attr_accessor salutation (): ::String?
    end

    class SimpleScalarPropertiesInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor string_value (): ::String?
      attr_accessor true_boolean_value (): bool?
      attr_accessor false_boolean_value (): bool?
      attr_accessor byte_value (): ::Integer?
      attr_accessor short_value (): ::Integer?
      attr_accessor integer_value (): ::Integer?
      attr_accessor long_value (): ::Integer?
      attr_accessor float_value (): ::Float?
      attr_accessor double_value (): ::Float?
    end

    class SimpleScalarPropertiesOutput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor string_value (): ::String?
      attr_accessor true_boolean_value (): bool?
      attr_accessor false_boolean_value (): bool?
      attr_accessor byte_value (): ::Integer?
      attr_accessor short_value (): ::Integer?
      attr_accessor integer_value (): ::Integer?
      attr_accessor long_value (): ::Integer?
      attr_accessor float_value (): ::Float?
      attr_accessor double_value (): ::Float?
    end

    class SparseJsonListsInput
      include Hearth::Structure
      attr_accessor sparse_string_list (): ::Array[::String?]?
    end

    class SparseJsonListsOutput
      include Hearth::Structure
      attr_accessor sparse_string_list (): ::Array[::String?]?
    end

    class SparseJsonMapsInput
      include Hearth::Structure
      attr_accessor sparse_struct_map (): ::Hash[::String, Types::GreetingStruct?]?
      attr_accessor sparse_number_map (): ::Hash[::String, ::Integer?]?
      attr_accessor sparse_boolean_map (): ::Hash[::String, bool?]?
      attr_accessor sparse_string_map (): ::Hash[::String, ::String?]?
      attr_accessor sparse_set_map (): ::Hash[::String, ::Array[::String]?]?
    end

    class SparseJsonMapsOutput
      include Hearth::Structure
      attr_accessor sparse_struct_map (): ::Hash[::String, Types::GreetingStruct?]?
      attr_accessor sparse_number_map (): ::Hash[::String, ::Integer?]?
      attr_accessor sparse_boolean_map (): ::Hash[::String, bool?]?
      attr_accessor sparse_string_map (): ::Hash[::String, ::String?]?
      attr_accessor sparse_set_map (): ::Hash[::String, ::Array[::String]?]?
    end

    class StreamingTraitsInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): (Hearth::_ReadableIO | Hearth::_WritableIO | ::String)?
    end

    class StreamingTraitsOutput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): (Hearth::_ReadableIO | Hearth::_WritableIO | ::String)?
    end

    class StreamingTraitsRequireLengthInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): (Hearth::_ReadableIO | Hearth::_WritableIO | ::String)?
    end

    class StreamingTraitsRequireLengthOutput
      include Hearth::Structure
    end

    class StreamingTraitsWithMediaTypeInput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): (Hearth::_ReadableIO | Hearth::_WritableIO | ::String)?
    end

    class StreamingTraitsWithMediaTypeOutput
      include Hearth::Structure
      attr_accessor foo (): ::String?
      attr_accessor blob (): (Hearth::_ReadableIO | Hearth::_WritableIO | ::String)?
    end

    module StringEnum
      V: ::String
    end

    class StructureListMember
      include Hearth::Structure
      attr_accessor a (): ::String?
      attr_accessor b (): ::String?
    end

    class TestBodyStructureInput
      include Hearth::Structure
      attr_accessor test_id (): ::String?
      attr_accessor test_config (): Types::TestConfig?
    end

    class TestBodyStructureOutput
      include Hearth::Structure
      attr_accessor test_id (): ::String?
      attr_accessor test_config (): Types::TestConfig?
    end

    class TestConfig
      include Hearth::Structure
      attr_accessor timeout (): ::Integer?
    end

    module TestEnum
      FOO: ::String

      BAR: ::String

      BAZ: ::String
    end

    module TestIntEnum
      ONE: ::Numeric

      TWO: ::Numeric
    end

    class TestNoPayloadInput
      include Hearth::Structure
      attr_accessor test_id (): ::String?
    end

    class TestNoPayloadOutput
      include Hearth::Structure
      attr_accessor test_id (): ::String?
    end

    class TestPayloadBlobInput
      include Hearth::Structure
      attr_accessor content_type (): ::String?
      attr_accessor data (): ::String?
    end

    class TestPayloadBlobOutput
      include Hearth::Structure
      attr_accessor content_type (): ::String?
      attr_accessor data (): ::String?
    end

    class TestPayloadStructureInput
      include Hearth::Structure
      attr_accessor test_id (): ::String?
      attr_accessor payload_config (): Types::PayloadConfig?
    end

    class TestPayloadStructureOutput
      include Hearth::Structure
      attr_accessor test_id (): ::String?
      attr_accessor payload_config (): Types::PayloadConfig?
    end

    class TimestampFormatHeadersInput
      include Hearth::Structure
      attr_accessor member_epoch_seconds (): ::Time?
      attr_accessor member_http_date (): ::Time?
      attr_accessor member_date_time (): ::Time?
      attr_accessor default_format (): ::Time?
      attr_accessor target_epoch_seconds (): ::Time?
      attr_accessor target_http_date (): ::Time?
      attr_accessor target_date_time (): ::Time?
    end

    class TimestampFormatHeadersOutput
      include Hearth::Structure
      attr_accessor member_epoch_seconds (): ::Time?
      attr_accessor member_http_date (): ::Time?
      attr_accessor member_date_time (): ::Time?
      attr_accessor default_format (): ::Time?
      attr_accessor target_epoch_seconds (): ::Time?
      attr_accessor target_http_date (): ::Time?
      attr_accessor target_date_time (): ::Time?
    end

    class TopLevel
      include Hearth::Structure
      attr_accessor dialog (): Types::Dialog?
      attr_accessor dialog_list (): ::Array[Types::Dialog]?
      attr_accessor dialog_map (): ::Hash[::String, Types::Dialog]?
    end

    class UnionPayload < Hearth::Union
      class Greeting < UnionPayload
        def to_h: () -> { greeting: ::String }
        def to_s: () -> String
      end

      class Unknown < UnionPayload
        def to_h: () -> { unknown: { name: ::String, value: untyped } }
        def to_s: () -> String
      end
    end

    class UnionWithJsonName < Hearth::Union
      class Foo < UnionWithJsonName
        def to_h: () -> { foo: ::String }
        def to_s: () -> String
      end

      class Bar < UnionWithJsonName
        def to_h: () -> { bar: ::String }
        def to_s: () -> String
      end

      class Baz < UnionWithJsonName
        def to_h: () -> { baz: ::String }
        def to_s: () -> String
      end

      class Unknown < UnionWithJsonName
        def to_h: () -> { unknown: { name: ::String, value: untyped } }
        def to_s: () -> String
      end
    end

    class Unit
      include Hearth::Structure
    end

    class UnitInputAndOutputInput
      include Hearth::Structure
    end

    class UnitInputAndOutputOutput
      include Hearth::Structure
    end

  end
end
