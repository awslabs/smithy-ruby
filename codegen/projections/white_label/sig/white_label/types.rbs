# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file was code generated using smithy-ruby.
# https://github.com/smithy-lang/smithy-ruby
#
# WARNING ABOUT GENERATED CODE

module WhiteLabel
  module Types

    class ClientError
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class CustomAuthInput
      include Hearth::Structure
    end

    class CustomAuthOutput
      include Hearth::Structure
    end

    class DataplaneEndpointInput
      include Hearth::Structure
    end

    class DataplaneEndpointOutput
      include Hearth::Structure
    end

    class Defaults
      include Hearth::Structure
      attr_accessor string (): ::String?
      attr_accessor struct (): Types::Struct?
      attr_accessor un_required_number (): ::Integer?
      attr_accessor un_required_bool (): bool?
      attr_accessor number (): ::Integer
      attr_accessor bool (): bool
      attr_accessor hello (): ::String
      attr_accessor simple_enum (): ::String
      attr_accessor valued_enum (): ::String
      attr_accessor int_enum (): ::Integer
      attr_accessor null_document (): Hearth::document
      attr_accessor string_document (): Hearth::document
      attr_accessor boolean_document (): Hearth::document
      attr_accessor numbers_document (): Hearth::document
      attr_accessor list_document (): Hearth::document
      attr_accessor map_document (): Hearth::document
      attr_accessor list_of_strings (): ::Array[::String]
      attr_accessor map_of_strings (): ::Hash[::String, ::String]
      attr_accessor iso8601_timestamp (): ::Time
      attr_accessor epoch_timestamp (): ::Time
    end

    class DefaultsTestInput
      include Hearth::Structure
      attr_accessor defaults (): Types::Defaults?
    end

    class DefaultsTestOutput
      include Hearth::Structure
      attr_accessor string (): ::String?
      attr_accessor struct (): Types::Struct?
      attr_accessor un_required_number (): ::Integer?
      attr_accessor un_required_bool (): bool?
      attr_accessor number (): ::Integer
      attr_accessor bool (): bool
      attr_accessor hello (): ::String
      attr_accessor simple_enum (): ::String
      attr_accessor valued_enum (): ::String
      attr_accessor int_enum (): ::Integer
      attr_accessor null_document (): Hearth::document
      attr_accessor string_document (): Hearth::document
      attr_accessor boolean_document (): Hearth::document
      attr_accessor numbers_document (): Hearth::document
      attr_accessor list_document (): Hearth::document
      attr_accessor map_document (): Hearth::document
      attr_accessor list_of_strings (): ::Array[::String]
      attr_accessor map_of_strings (): ::Hash[::String, ::String]
      attr_accessor iso8601_timestamp (): ::Time
      attr_accessor epoch_timestamp (): ::Time
    end

    class EndpointOperationInput
      include Hearth::Structure
    end

    class EndpointOperationOutput
      include Hearth::Structure
    end

    class EndpointWithHostLabelOperationInput
      include Hearth::Structure
      attr_accessor label_member (): ::String
    end

    class EndpointWithHostLabelOperationOutput
      include Hearth::Structure
    end

    class HttpApiKeyAuthInput
      include Hearth::Structure
    end

    class HttpApiKeyAuthOutput
      include Hearth::Structure
    end

    class HttpBasicAuthInput
      include Hearth::Structure
    end

    class HttpBasicAuthOutput
      include Hearth::Structure
    end

    class HttpBearerAuthInput
      include Hearth::Structure
    end

    class HttpBearerAuthOutput
      include Hearth::Structure
    end

    class HttpDigestAuthInput
      include Hearth::Structure
    end

    class HttpDigestAuthOutput
      include Hearth::Structure
    end

    module IntEnumType
      ONE: ::Numeric

      TWO: ::Numeric

      THREE: ::Numeric
    end

    class KitchenSinkInput
      include Hearth::Structure
      attr_accessor string (): ::String?
      attr_accessor simple_enum (): ::String?
      attr_accessor valued_enum (): ::String?
      attr_accessor struct (): Types::Struct?
      attr_accessor document (): Hearth::document?
      attr_accessor list_of_strings (): ::Array[::String]?
      attr_accessor list_of_structs (): ::Array[Types::Struct]?
      attr_accessor map_of_strings (): ::Hash[::String, ::String]?
      attr_accessor map_of_structs (): ::Hash[::String, Types::Struct]?
      attr_accessor union (): Types::Union?
    end

    class KitchenSinkOutput
      include Hearth::Structure
      attr_accessor string (): ::String?
      attr_accessor simple_enum (): ::String?
      attr_accessor valued_enum (): ::String?
      attr_accessor struct (): Types::Struct?
      attr_accessor document (): Hearth::document?
      attr_accessor list_of_strings (): ::Array[::String]?
      attr_accessor list_of_structs (): ::Array[Types::Struct]?
      attr_accessor map_of_strings (): ::Hash[::String, ::String]?
      attr_accessor map_of_structs (): ::Hash[::String, Types::Struct]?
      attr_accessor union (): Types::Union?
    end

    class MixinTestInput
      include Hearth::Structure
      attr_accessor user_id (): ::String?
    end

    class MixinTestOutput
      include Hearth::Structure
      attr_accessor username (): ::String?
      attr_accessor user_id (): ::String?
    end

    class NoAuthInput
      include Hearth::Structure
    end

    class NoAuthOutput
      include Hearth::Structure
    end

    class OptionalAuthInput
      include Hearth::Structure
    end

    class OptionalAuthOutput
      include Hearth::Structure
    end

    class OrderedAuthInput
      include Hearth::Structure
    end

    class OrderedAuthOutput
      include Hearth::Structure
    end

    class PaginatorsTestOperationInput
      include Hearth::Structure
      attr_accessor next_token (): ::String?
    end

    class PaginatorsTestOperationOutput
      include Hearth::Structure
      attr_accessor next_token (): ::String?
      attr_accessor items (): ::Array[::String]?
    end

    class PaginatorsTestWithItemsInput
      include Hearth::Structure
      attr_accessor next_token (): ::String?
    end

    class PaginatorsTestWithItemsOutput
      include Hearth::Structure
      attr_accessor next_token (): ::String?
      attr_accessor items (): ::Array[::String]?
    end

    class RelativeMiddlewareInput
      include Hearth::Structure
    end

    class RelativeMiddlewareOutput
      include Hearth::Structure
    end

    class RequestCompressionInput
      include Hearth::Structure
      attr_accessor body (): ::String?
    end

    class RequestCompressionOutput
      include Hearth::Structure
    end

    class RequestCompressionStreamingInput
      include Hearth::Structure
      attr_accessor body (): (Hearth::_ReadableIO | Hearth::_WritableIO | String)
    end

    class RequestCompressionStreamingOutput
      include Hearth::Structure
    end

    class ResourceEndpointInput
      include Hearth::Structure
      attr_accessor resource_url (): ::String
    end

    class ResourceEndpointOutput
      include Hearth::Structure
    end

    class ResultWrapper
      include Hearth::Structure
      attr_accessor member___123next_token (): ::String?
    end

    class ServerError
      include Hearth::Structure
    end

    module SimpleEnum
      YES: ::String

      NO: ::String
    end

    class StreamingInput
      include Hearth::Structure
      attr_accessor stream (): (Hearth::_ReadableIO | Hearth::_WritableIO | String)
    end

    class StreamingOutput
      include Hearth::Structure
      attr_accessor stream (): (Hearth::_ReadableIO | Hearth::_WritableIO | String)
    end

    class StreamingWithLengthInput
      include Hearth::Structure
      attr_accessor stream (): (Hearth::_ReadableIO | Hearth::_WritableIO | String)
    end

    class StreamingWithLengthOutput
      include Hearth::Structure
    end

    class Struct
      include Hearth::Structure
      attr_accessor value (): ::String?
    end

    class Union < Hearth::Union
      class String < Union
        def to_h: () -> { string: ::String }
        def to_s: () -> String
      end

      class Struct < Union
        def to_h: () -> { struct: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class Unknown < Union
        def to_h: () -> { unknown: { name: ::String, value: untyped } }
        def to_s: () -> String
      end
    end

    module ValuedEnum
      YES: ::String

      NO: ::String
    end

    class WaitersTestInput
      include Hearth::Structure
      attr_accessor status (): ::String?
    end

    class WaitersTestOutput
      include Hearth::Structure
      attr_accessor status (): ::String?
    end

    class Struct____PaginatorsTestWithBadNamesInput
      include Hearth::Structure
      attr_accessor member___next_token (): ::String?
    end

    class Struct____PaginatorsTestWithBadNamesOutput
      include Hearth::Structure
      attr_accessor member___wrapper (): Types::ResultWrapper?
      attr_accessor member___items (): ::Array[::String]?
    end

  end
end
